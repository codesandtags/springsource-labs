<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc     http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 
	  // The configuration for your 'accounts' Dispatcher Servlet.
	  // 
	  // This example uses component scanning to automatically
	  // pick up controllers. 
	  //   - Dependencies of controllers are wired using @Autowired support.
	  //   - The URI scheme is controller using @RequestMapping annotations
	 -->
	
	<!--
	  // Only scan the controller package to avoid accidentally picking
	  // up other components by mistake.
	  -->
	<context:component-scan base-package="accounts.web"/>	

	<mvc:annotation-driven/>

	<!--  
	  // Without component scanning you would have had
	  // to wire up the controller yourself like this:
		
		<bean class="accounts.web.AccountController">
			<constructor-arg ref="accountManager"/>
		</bean>
	  -->	
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
</beans>
