<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/jdbc
              http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Infrastructure configuration to support system testing the rewards 
		application. These beans are defined in a separate file to isolate infrastructure 
		config from application config, as infrastructure often varies between environments. 
		For example, in a test environment you might use a lightweight in-memory 
		DataSource, while in production you connect to a database server with a connection 
		pool. -->
		
	<!-- Imports application configuration -->
	<import resource="classpath:rewards/internal/application-config.xml"/>
	
	<!-- Replace each placeholder with a value from your properties file -->
    <context:property-placeholder location="classpath:rewards/testdb.properties"/>	
	
	<!-- Creates an in-memory "rewards" database populated with test data for 
		fast testing -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean">
        <property name="databasePopulator" ref="populator"/>
    </bean> 
        
    <bean id="populator" class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
        <property name="scripts">
            <list>
                <value>${schemaLocation}</value>
                <value>${testDataLocation}</value>
            </list>
        </property>
    </bean>
</beans>
