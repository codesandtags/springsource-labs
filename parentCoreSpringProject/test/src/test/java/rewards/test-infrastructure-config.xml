<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Infrastructure configuration to support system testing the rewards 
		application. These beans are defined in a separate file to isolate infrastructure 
		config from application config, as infrastructure often varies between environments. 
		For example, in a test environment you might use a lightweight in-memory 
		DataSource, while in production you connect to a database server with a connection 
		pool. -->

	<!-- Imports application configuration -->
	<import resource="classpath:rewards/internal/application-config.xml"/>

	<!-- Performs bean creation logging - to see what profiles are active. -->
    <bean class="rewards.LoggingBeanPostProcessor"/>


	<!-- TODO 05: Make this dataSource belong to the "jdbc-dev" profile.       -->

	<!-- Creates an in-memory "rewards" database populated with test data for 
		fast testing -->
	<jdbc:embedded-database id="dataSource">
		<jdbc:script location="classpath:rewards/testdb/schema.sql" />
		<jdbc:script location="classpath:rewards/testdb/test-data.sql" />
	</jdbc:embedded-database>
	
	<!--  TODO 07: This is the "production" profile using a JNDI lookup.  -->
	<!--           Nothing to do, just see how this profile is used here. -->
	<!--           You may cover jee:jndi-lookup later in the course.     -->
	<beans profile="jdbc-production">
		<!--  A stand-alone JNDI implementation for testing. -->
		<bean class="rewards.SimpleJndiHelper" />

		<!--  Get the dataSource from JNDI -->
		<jee:jndi-lookup id="dataSource" jndi-name="java:/comp/env/jdbc/rewards" lazy-init="true" />
	</beans>

</beans>
